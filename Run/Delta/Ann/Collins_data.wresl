! R.Wilbur & S. Wu 5/10/05
/*

ARTIFICIAL NEURAL NETWORK IMPLEMENTATION - COLLINSVILLE

Collinsville salinity standard:
month       ECstandard
1           19.0
2           15.5
3           15.5
4           12.5
5            8.0
6            8.0
7           11.0
8           11.0

*/

!*************************************************************************************************************

! calculate previous month's value of salinity
! calculate previous month's value of salinity
define CO_EC_Month_sv {
      value  surrogateEC(Sac_Tot(-1:-5),
               EXP_tot(-1:-5),
               DXC(-1:-5),
               net_DICU(-1:-5),
               C_SJR070(-1:-5),
               SMSCG_OP(-1:-5),
               int(CO), int(monthly_ave), calmonth_prev, calyear_prev)
}

define CO_EC_Month {lower -999999 upper 999999 kind 'SALINITY' units 'UMHOS/CM'}
goal setCOMonprv {CO_EC_Month = CO_EC_Month_sv}

!get 14-day EC for 1 month earlier
/*define CO_EC_Max14Day_sv {
      value  surrogateEC(Sac_Tot(-1:-5),
               EXP_tot(-1:-5),
               DXC(-1:-5),
               net_DICU(-1:-5),
               C_SJR070(-1:-5),
               SMSCG_OP(-1:-5),
               int(CO),int(monthly_ave), calmonth_prev, calyear_prev)  !int(max_14day_running_ave)
}
define CO_EC_Max14Day {std kind 'SALINITY' units 'UMHOS/CM'}
goal setCO_EC_14Ave {CO_EC_Max14Day = CO_EC_Max14Day_sv}
*/
!****************************************************************************************

! define the EC standard for Collinsville (millimhos/cm)
define CO_EC_STD_lookup {
  case OctMay {                               !@jmg 2017.11.28 - case identifier revised
    condition  month >=OCT .and. month <=MAY
    select     ECstandard1
    from       salinity_std_col
    where      month=month}
  case NoStandard {
    condition  always
    value  99.0}
}
define CO_EC_STD_sv { value CO_EC_STD_lookup * 1000.0 }
define CO_EC_STD {std kind 'SALINITY' units 'UMHOS/CM'}
goal COECstandout {CO_EC_STD = CO_EC_STD_sv}




define CO_a0_sv {
  case HighFlow{
  	condition (SAC_nominal - EXP_nominal > 40000) .and. (SAC_TOT(-1) - EXP_tot(-1) > 40000)
    value 0.0}		
  case control{                  
	condition month >= Apr .and. month <= Aug 
    value  surrogateECLinearize(Sac_Tot(-1:-4), Sac_nominal,
                    EXP_tot(-1:-4), EXP_nominal,
                    C_SJR070(-1:-4), SJR_ann_est,
                    DXC(-1:-4), DXC_est,
                    net_DICU(-1:-4), net_delta_cu,
                    SMSCG_OP(-1:-4), SMSCG_OPSV,
                    CO_EC_std_sv, int(CO), 0, int(ann_type), calmonth, calyear)}
  case other {
    condition  always
    value 0.}
}

define CO_a1_sv {
  case HighFlow{
  	condition (SAC_nominal - EXP_nominal > 20000) .and. (SAC_TOT(-1) - EXP_tot(-1) > 20000)
    value -1.0}		
  case control{
    condition month >= Apr .and. month <= Aug 
    value  surrogateECLinearize(Sac_Tot(-1:-4), Sac_nominal,
                    EXP_tot(-1:-4), Exp_nominal,
                    C_SJR070(-1:-4), SJR_ann_est,
                    DXC(-1:-4), DXC_est,
                    net_DICU(-1:-4), net_delta_cu,
                    SMSCG_OP(-1:-4), SMSCG_OPSV,
                    CO_EC_std_sv, int(CO), 1, int(ann_type), calmonth, calyear)}
  case other{
    condition  always
    value -1.}
}

define CO_a2_sv {
  case HighFlow{
  	condition (SAC_nominal - EXP_nominal > 20000) .and. (SAC_TOT(-1) - EXP_tot(-1) > 20000)
    value 1.0}		
  case control{
    condition month >= Apr .and. month <= Aug
    value  surrogateECLinearize(Sac_Tot(-1:-4), Sac_nominal,
                    EXP_tot(-1:-4), Exp_nominal,
                    C_SJR070(-1:-4), SJR_ann_est,
                    DXC(-1:-4), DXC_est,
                    net_DICU(-1:-4), net_delta_cu,
                    SMSCG_OP(-1:-4), SMSCG_OPSV,
                    CO_EC_std_sv, int(CO), 2, int(ann_type), calmonth, calyear)}
  case other {
    condition  always
    value 1.}
}

define CO_b_sv {
	case noControl{
  		condition CO_a0_sv>=999999.
  		value 999999.
	}
	case noExpSensitivity{
		condition CO_a2_sv < 0.000001
		value 0.
	}
	case control{
		condition always
		value CO_a0_sv/CO_a2_sv
	}
}

define CO_m_sv {
  case reducecalls {
    condition  CO_b_sv >= 999990.
    value 0.}
   case noExpSensitivity{
    condition CO_a2_sv < 0.000001
	Value 1.
	}    
  case control{
    condition month >= Apr .and. month <= Aug
    value -CO_a1_sv/CO_a2_sv}
  
  case other {
    condition  always
    value 0.}
}

define CO_a0 {lower unbounded upper unbounded kind 'constraint' units 'UMHOS/CM'}
define CO_a1 {lower unbounded upper unbounded kind 'constraint' units 'UMHOS/CM'}
define CO_a2 {lower unbounded upper unbounded kind 'constraint' units 'UMHOS/CM'}
goal setCOa0 {CO_a0 = CO_a0_sv}
goal setCOa1 {CO_a1 = CO_a1_sv}
goal setCOa2 {CO_a2 = CO_a2_sv}

define CO_m {lower unbounded upper unbounded kind 'SLOPE' units 'NONE'}
define CO_b {lower unbounded upper unbounded kind 'INTERCEPT' units 'NONE'}
goal setCO_m {CO_m = CO_m_sv}
goal setCO_b {CO_b = CO_b_sv}

!********************************************************************

define CO_Sac_ZeroExp_sv2 {
  case HighFlow{
  	condition (SAC_nominal - EXP_nominal > 15000) .and. (SAC_TOT(-1) - EXP_tot(-1) > 15000)
    value 0.0}	
  case control{
  	! TODO: What is correct period?
    condition month >=OCT .and. month <=MAY
    	value max(0.,requiredFlow(CO_EC_std_sv, Sac_Tot(-1:-4), -9999., EXP_tot(-1:-4),0., 
		              C_SJR070(-1:-4), SJR_ann_est, 
		              DXC(-1:-4), DXC_est, net_DICU(-1:-4), net_delta_cu, 
		              SMSCG_OP(-1:-4), SMSCG_OPSV, 
		              5000., 24000., int(CO), int(ann_type), calmonth, calyear))
		         }
  case other {
  	condition always
  	value 0.0}
}

define CO_Sac_ZeroExp {lower unbounded upper unbounded kind 'FLOW' units 'CFS'}
goal setCO_Sac_ZeroExp {CO_Sac_ZeroExp = CO_Sac_ZeroExp_sv2}
