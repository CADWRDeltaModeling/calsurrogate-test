! E. Ateljevich 2025-02-21
/*

ARTIFICIAL NEURAL NETWORK IMPLEMENTATION - EMMATON

Emmaton salinity standard:
14-day running average EC may not exceed the standard for the periods listed below (mmhos):
water-year-type:    0.45 EC April 1 to:    Ec from date shown to Aug 15:
Wet                 Aug 15                 --
Above Normal        Jul 1                  0.63
Below Normal        Jun 20                 1.14
Dry                 Jun15                  1.67
Critical            --                     2.78

These standards are modified to account to the monthly time-step.
Modified values are derived from an exponential weighting function.
Modified values are in salinity_std_emt_new.table.

*/

!*************************************************************************************************************

! calculate previous month's value of salinity
define EM_EC_Month_sv {
      value  surrogateEC(Sac_Tot(-1:-5),
               EXP_tot(-1:-5),
               DXC(-1:-5),
               net_DICU(-1:-5),
               C_SJR070(-1:-5),
               SMSCG_OP(-1:-5),
               int(EM), int(monthly_ave), calmonth_prev, calyear_prev)
}

define EM_EC_Month {lower -999999 upper 999999 kind 'SALINITY' units 'UMHOS/CM'}
goal setEMMonprv {EM_EC_Month = EM_EC_Month_sv}


!**************************************************************************************************
!get 14-day EC for 1 month earlier
define EM_EC_Max14Day_sv {
      value  surrogateEC(Sac_Tot(-1:-5),
               EXP_tot(-1:-5),
               DXC(-1:-5),
               net_DICU(-1:-5),
               C_SJR070(-1:-5),
               SMSCG_OP(-1:-5),
               int(EM),int(max_14day_running_ave), calmonth_prev, calyear_prev)
}
define EM_EC_Max14Day {std kind 'SALINITY' units 'UMHOS/CM'}
goal setEM_EC_14Ave {EM_EC_Max14Day = EM_EC_Max14Day_sv}
 
!*************************************************************************************************************

! define the EC standard
define EM_EC_STD_lookup_orig {      
  case AprToAug {
    condition         month >=APR .and. month <=AUG
    select            ECstandard
    from              salinity_std_emt_new
    where             month=month,wyt_SAC=wyt_ann}
  case NoStandard {
    condition         always
    value             99.0}
}
define EM_EC_STD_lookup {      
    case   tucp_adjust {
       condition tucp_trigger == 1
       value EM_EC_STD_lookup_orig*EM_wq_CritRelaxFac}
    case Otherwise {
       condition   always
       value        EM_EC_STD_lookup_orig}
}

define EM_EC_std_sv {value EM_EC_STD_lookup*1000.0}
define EM_EC_STD {std kind 'SALINITY' units 'UMHOS/CM'}
goal EMECstandout {EM_EC_std = EM_EC_std_sv}

!*************************************************************************************************************

define EM_a0_sv {
  case HighFlow{
  	condition (SAC_nominal - EXP_nominal > 20000) .and. (SAC_TOT(-1) - EXP_tot(-1) > 20000)
    value 0.0}		
  case control{                  
	condition month >= Apr .and. month <= Aug 
    value  surrogateECLinearize(Sac_Tot(-1:-4), Sac_nominal,
                    EXP_tot(-1:-4), EXP_nominal,
                    C_SJR070(-1:-4), SJR_ann_est,
                    DXC(-1:-4), DXC_est,
                    net_DICU(-1:-4), net_delta_cu,
                    SMSCG_OP(-1:-4), SMSCG_OPSV,
                    EM_EC_std_sv, int(EM), 0, int(ann_type), calmonth, calyear)}
  case other {
    condition  always
    value 0.}
}

define EM_a1_sv {
  case HighFlow{
  	condition (SAC_nominal - EXP_nominal > 20000) .and. (SAC_TOT(-1) - EXP_tot(-1) > 20000)
    value -1.0}		
  case control{
    condition month >= Apr .and. month <= Aug 
    value  surrogateECLinearize(Sac_Tot(-1:-4), Sac_nominal,
                    EXP_tot(-1:-4), Exp_nominal,
                    C_SJR070(-1:-4), SJR_ann_est,
                    DXC(-1:-4), DXC_est,
                    net_DICU(-1:-4), net_delta_cu,
                    SMSCG_OP(-1:-4), SMSCG_OPSV,
                    EM_EC_std_sv, int(EM), 1, int(ann_type), calmonth, calyear)}
  case other{
    condition  always
    value -1.}
}

define EM_a2_sv {
  case HighFlow{
  	condition (SAC_nominal - EXP_nominal > 20000) .and. (SAC_TOT(-1) - EXP_tot(-1) > 20000)
    value 1.0}		
  case control{
    condition month >= Apr .and. month <= Aug
    value  surrogateECLinearize(Sac_Tot(-1:-4), Sac_nominal,
                    EXP_tot(-1:-4), Exp_nominal,
                    C_SJR070(-1:-4), SJR_ann_est,
                    DXC(-1:-4), DXC_est,
                    net_DICU(-1:-4), net_delta_cu,
                    SMSCG_OP(-1:-4), SMSCG_OPSV,
                    EM_EC_std_sv, int(EM), 2, int(ann_type), calmonth, calyear)}
  case other {
    condition  always
    value 1.}
}

define EM_b_sv {
	case noControl{
  		condition EM_a0_sv>=999990.
  		value 999999.
	}
	case noExpSensitivity{
		! Dealing with division by zero issue
		condition abs(EM_a2_sv) < 0.00001
		value 0.
	}
	case negSensitivity{
		! For negative sensitivity of a2 the inequality will flip signs so
		! we need to add - sign. 
		condition EM_a2_sv < -0.00001
		value -EM_a0_sv/EM_a2_sv
	}	
	case control{
		condition always
		value EM_a0_sv/EM_a2_sv
	}
}

define EM_m_sv {
  case reducecalls {
    condition  EM_b_sv >= 999990.
    value 0.}
   case noExpSensitivity{
    condition EM_a2_sv < 0.000001
	Value 1.
	}    
  case control{
    condition month >= Apr .and. month <= Aug
    value -EM_a1_sv/EM_a2_sv}
  
  case other {
    condition  always
    value 0.}
}

define EM_a0 {lower unbounded upper unbounded kind 'constraint' units 'UMHOS/CM'}
define EM_a1 {lower unbounded upper unbounded kind 'constraint' units 'UMHOS/CM'}
define EM_a2 {lower unbounded upper unbounded kind 'constraint' units 'UMHOS/CM'}
goal setEMa0 {EM_a0 = EM_a0_sv}
goal setEMa1 {EM_a1 = EM_a1_sv}
goal setEMa2 {EM_a2 = EM_a2_sv}

define EM_m {lower unbounded upper unbounded kind 'SLOPE' units 'NONE'}
define EM_b {lower unbounded upper unbounded kind 'INTERCEPT' units 'NONE'}
goal setEM_m {EM_m = EM_m_sv}
goal setEM_b {EM_b = EM_b_sv}

!********************************************************************

define EM_Sac_ZeroExp_sv2 {
  case control{
    condition month >= Apr .and. month <= Aug
    	value max(0.,requiredFlow(EM_EC_std_sv, Sac_Tot(-1:-4), -9999., EXP_tot(-1:-4), 0., 
		              C_SJR070(-1:-4), SJR_ann_est, 
		              DXC(-1:-4), DXC_est, net_DICU(-1:-4), net_delta_cu, 
		              SMSCG_OP(-1:-4), SMSCG_OPSV, 
		              5000., 24000., int(EM), int(ann_type), calmonth, calyear))
		         }
  case other {
  	condition always
  	value 0.0}
}


define EM_Sac_ZeroExp {lower unbounded upper unbounded kind 'FLOW' units 'CFS'}
goal setEM_Sac_ZeroExp {EM_Sac_ZeroExp = EM_Sac_ZeroExp_sv2}
